# GitHub Actions CI for Unity Hololens 2 UWP running on windows.

name: CI
on: [push, workflow_dispatch]

jobs:
  build:
    name: Run Tests for Unity Hololens Build (UWP ARM64)
    runs-on: windows-latest
    env:
      UNITY_VERSION: 2021.3.10f1
        
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Cache Unity Setup Installers
        uses: actions/cache@v2.1.3
        with:
          path: UnitySetupInstallerCache
          key: UnitySetupInstallerCache-${{ env.UNITY_VERSION }}
          
      - name: Install Unity
        run: |
          Install-Module UnitySetup -Force
          Import-Module UnitySetup
          Install-UnitySetupInstance -Cache UnitySetupInstallerCache -Installers (Find-UnitySetupInstaller -Version "$env:UNITY_VERSION" -Components 'Windows','Windows_IL2CPP','UWP_IL2CPP') -Verbose
        shell: pwsh
        
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          poll-interval-seconds: 10
                    
      - name: Cache Unity
        uses: actions/cache@v2.1.3
        with:
          path: Library
          key: UnityCache-${{ env.UNITY_VERSION }}  
      
      - name: Activate Unity License
        run: Start-UnityEditor -Credential (New-Object System.Management.Automation.PSCredential ("$env:UNITY_EMAIL", (ConvertTo-SecureString "$env:UNITY_PASSWORD" -AsPlainText -Force))) -Serial (ConvertTo-SecureString "$env:UNITY_LICENSE" -AsPlainText -Force) -LogFile ./CILogs\Activation.log -AdditionalArguments "-verbose -nographics" -Wait -Verbose -ErrorAction SilentlyContinue
        shell: pwsh
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        #continue-on-error: true # Can output errors even if activation is successful. Using -LogFile reports them as error. As an alternative, log silently as AdditionalArgument "-logFile ./CILogs\Activation.log" instead.

      #- name: Build Unity Project
       # run: Start-UnityEditor -Project ./Treevolution/ -ExecuteMethod Microsoft.MixedReality.Toolkit.Build.Editor.UnityPlayerBuildTools.StartCommandLineBuild -BuildTarget WSAPlayer -BatchMode -Quit -LogFile ./CILogs\Build.log -Wait -AdditionalArguments "-verbose -nographics -logDirectory Logs -arm64" -Verbose
        # Build with appx takes very long, do not use -Quit until https://github.com/microsoft/MixedRealityToolkit-Unity/issues/8901 is resolved
        #run: Start-UnityEditor -Project ./Treevolution/ -ExecuteMethod Microsoft.MixedReality.Toolkit.Build.Editor.UnityPlayerBuildTools.StartCommandLineBuild -BuildTarget WSAPlayer -BatchMode -LogFile ./CILogs\Build.log -Wait -AdditionalArguments "-verbose -nographics -logDirectory Logs -buildAppx -arm64" -Verbose
        #shell: pwsh
        
      - name: Run Tests
        run: Start-UnityEditor -Project ./Treevolution/ -runTests -BatchMode -Quit -LogFile ./CILogs\Build.log -Wait -AdditionalArguments "-verbose -nographics -logDirectory Logs -arm64" -Verbose
        # Build with appx takes very long, do not use -Quit until https://github.com/microsoft/MixedRealityToolkit-Unity/issues/8901 is resolved
        #run: Start-UnityEditor -Project ./Treevolution/ -ExecuteMethod Microsoft.MixedReality.Toolkit.Build.Editor.UnityPlayerBuildTools.StartCommandLineBuild -BuildTarget WSAPlayer -BatchMode -LogFile ./CILogs\Build.log -Wait -AdditionalArguments "-verbose -nographics -logDirectory Logs -buildAppx -arm64" -Verbose
        #shell: pwsh

      - name: Return Unity License
        run: Start-UnityEditor -Credential (New-Object System.Management.Automation.PSCredential ("$env:UNITY_EMAIL", (ConvertTo-SecureString "$env:UNITY_PASSWORD" -AsPlainText -Force))) -ReturnLicense -LogFile ./CILogs\Deactivation.log -Wait -Verbose
        shell: pwsh
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}  
        if: always()
      
      - name: Upload Unity Logs
        uses: actions/upload-artifact@v2
        with:
          name: Unity Logs
          path: Logs/*.log
        if: always()
